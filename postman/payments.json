{
	"info": {
		"_postman_id": "f79a8980-b4ee-4164-8607-6d276bc0dc94",
		"name": "SyncPayments",
		"description": "\n\n# Table of Content\n\n- Overview\n- Authentication\n- Request\n- Error Codes\n- Rate limit\n\n# Overview\n\n------\n\nSync Payments allows our customers to process payments in different FIAT and Crypto currencies, simplifying how payments are managed and processed.\n\nSync Payments’s API has an architectural style of a RESTful design pattern. It uses HTTP as its underlying protocol, where standard HTTP verbs and HTTP response codes are used. Communication travels via HTTPS to ensure a secure data exchange. Almost every response body is JSON encoded, unless stated on the endpoint description. Since RESTful services and JSON are highly popular and most major development languages include a form to interact with these technologies, it's quite easy to integrate with Sync's API.\n\nStart using our API ASAP with just a few steps.\n\n1. Register\n\n   In order to gain entry to Sync, you need to register for both a Paybook account and a Sync account. If you haven’t already done so, please head over to our [website](https://www.paybook.com/), sign up, accept our terms, and you’re good to go!\n\n2. Play in the Sandbox\n\n   Once you're registered, you'll be taken to the Sync Control Panel where you can obtain your sandbox key to start testing the API without the need for valid user credentials.\n\n3. Access the Production Environment\n\n   When you're ready to work with live data, you'll need to accept the Sync Service Agreement and upload the by-laws or your (or your client's) entity to validate the authenticity of those entering into the agreement with Paybook.\n\n   - 30-day Trial: Want to give Sync a test drive before committing? Try us risk-free for up to 30 days.\n   - Select a Plan: At the end of the trial or any point prior, simply choose the plan that fits your needs and enjoy continuous feeds of financial data right at your fingertips.\n\n# Authentication\n\n------\n\nSync API has two types of authentication:\n\n#### API KEY\n\n```bash\ncurl URL \\\n-H \"Authorization: api_key api_key={API_KEY}\" \\\n-H MEDIA_TYPE \\\n-X METHOD \\\n-d PARAMS \n```\n\n#### Bearer Token\n\n```bash\ncurl URL \\\n-H \"Authorization: Bearer {TOKEN}\" \\\n-H MEDIA_TYPE \\\n-X METHOD \\\n-d PARAMS \n```\n\nType of Authentication required is defined by Resource\n\n| Resource     | Auth Type      |\n| ------------ | -------------- |\n| Users        | `API KEY`      |\n| Sessions     | `API KEY`      |\n| Catalogs     | `Bearer Token` |\n| Credentials  | `Bearer Token` |\n| Accounts     | `Bearer Token` |\n| Transactions | `Bearer Token` |\n\n# Environments\n\n------\n\n#### Sandbox\n\nACME Organization with these Sites:\n\n1. Normal\n2. Token\n3. Captcha\n4. Multiple Image\n5. Select\n\n#### Production\n\nLive Organizations\n\n# Request\n\n------\n\n#### Structure\n\n```bash\ncurl URL \\\n-H AUTH \\\n-H MEDIA_TYPE \\\n-X METHOD \\\n-d PARAMS\n```\n\n# Error Codes\n\n------\n\nTable of Error Codes defined in Paybook Sync API\n\n| Code | Message               |\n| ---- | --------------------- |\n| 400  | Bad Request           |\n| 401  | Unauthorized          |\n| 402  | Payment Required      |\n| 403  | Forbidden             |\n| 404  | Not Found             |\n| 429  | Too Many Requests     |\n| 500  | Internal Server Error |\n| 503  | Service Unavailable   |\n\n# Rate limit\n\n------\n\nThere are two types of rate-limit:\n\n#### Rate limit by server\n\n5 request per second \n\n#### Limit by credential\n\n1 pull request per day",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Cards",
			"item": [
				{
					"name": "AddCard",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "24ebf557-1756-4912-8b95-5eae403c8110",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=ISO-8859-1"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer 70909517dd70047e80b9ad69b861a7d1",
								"disabled": true
							},
							{
								"key": "Accept-Charset",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id_currency\": \"523a25953b8e77910e8b456c\",\n    \"number\": \"4716222791264622\",\n    \"cvv\": \"852\",\n    \"expiration\": \"2007\",\n    \"holder_name\": \"Jorgé Muza García\",\n    \"billing\": {\n        \"emailAddress\": \"jorge.muza@gmail.com\",\n        \"firstName\": \"Jorgé\",\n        \"middleName\": \"\",\n        \"lastName\": \"García\",\n        \"address\": \"2425 Victory Av\",\n        \"address2\": \"Apt 446\",\n        \"city\": \"Dallas\",\n        \"state\": \"TX\",\n        \"postalCode\": \"75219\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseSyncUrl}}/v1/payments/customers/{{id_pymnt_customer}}/cards",
							"host": [
								"{{baseSyncUrl}}"
							],
							"path": [
								"v1",
								"payments",
								"customers",
								"{{id_pymnt_customer}}",
								"cards"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteCard",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d4ebd3f-07fe-493c-a18a-63bc6a2f8a33",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseSyncUrl}}/v1/payments/customers/{{id_pymnt_customer}}/cards/{{id_pymnt_card}}",
							"host": [
								"{{baseSyncUrl}}"
							],
							"path": [
								"v1",
								"payments",
								"customers",
								"{{id_pymnt_customer}}",
								"cards",
								"{{id_pymnt_card}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListCardsPerCustomer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "649dc971-dca1-4bdc-a157-6b0be8bae66a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseSyncUrl}}/v1/payments/customers/{{id_pymnt_customer}}/cards",
							"host": [
								"{{baseSyncUrl}}"
							],
							"path": [
								"v1",
								"payments",
								"customers",
								"{{id_pymnt_customer}}",
								"cards"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Charges",
			"item": [
				{
					"name": "AddCharge",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "50264209-47c5-4a41-8fc6-ba0f891db201",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id_currency\": \"523a25953b8e77910e8b456c\",\n    \"transaction\": \"ff9d8b219b468317bc63ca29196e0fb4701fbbfc\",\n    \"internal_reference\": \"ff9d8b219b468317bc63ca29196e0fb4701fbbfc\",\n    \"reference\": \"20190814/0GZXXG81\",\n    \"description\": \"Contribution through Paybook!\",\n    \"amount\": 75\n}"
						},
						"url": {
							"raw": "{{baseSyncUrl}}/v1/payments/customers/{{id_pymnt_customer}}/charges",
							"host": [
								"{{baseSyncUrl}}"
							],
							"path": [
								"v1",
								"payments",
								"customers",
								"{{id_pymnt_customer}}",
								"charges"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCharge",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ddc3699e-92a2-4e80-8b4f-fb41562b6ea8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseSyncUrl}}/v1/payments/customers/{{id_pymnt_customer}}/charges/{{id_pymnt_charge}}",
							"host": [
								"{{baseSyncUrl}}"
							],
							"path": [
								"v1",
								"payments",
								"customers",
								"{{id_pymnt_customer}}",
								"charges",
								"{{id_pymnt_charge}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListChargesPerCustomer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "abf3df5d-1257-4544-80db-554b850e69c4",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseSyncUrl}}/v1/payments/customers/{{id_pymnt_customer}}/charges",
							"host": [
								"{{baseSyncUrl}}"
							],
							"path": [
								"v1",
								"payments",
								"customers",
								"{{id_pymnt_customer}}",
								"charges"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Customers",
			"item": [
				{
					"name": "AddCustomer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9145e99d-d099-4fed-8281-a8cd92b518d2",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "api_key {{apySyncKey}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"full_name\": \"Pedro Perez\",\n\t\"email_address\": \"j+test4@paybook.com\",\n    \"id_currency\": \"523a25953b8e77910e8b456c\"\n}"
						},
						"url": {
							"raw": "{{baseSyncUrl}}/v1/payments/customers",
							"host": [
								"{{baseSyncUrl}}"
							],
							"path": [
								"v1",
								"payments",
								"customers"
							]
						}
					},
					"response": [
						{
							"name": "AddCustomer",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "api_key {{apySyncKey}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"full_name\": \"Pedro Perez\",\n\t\"email_address\": \"j+test4@paybook.com\",\n    \"id_currency\": \"523a25953b8e77910e8b456c\"\n}"
								},
								"url": {
									"raw": "{{baseSyncUrl}}/v1/payments/customers",
									"host": [
										"{{baseSyncUrl}}"
									],
									"path": [
										"v1",
										"payments",
										"customers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Tue, 02 Jun 2020 15:05:50 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization, Content-Type, DNT, Origin, Referer, Sec-Fetch-Mode, User-Agent, X-App-Version, X-Requested-With"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "HEAD, POST, GET, DELETE, PUT, OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "*"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "86400"
								},
								{
									"key": "Cache-Control",
									"value": "max-age=0, no-store, no-cache, post-check=0, pre-check=0"
								},
								{
									"key": "Expires",
									"value": "Mon, 26 Jul 1997 05:00:00 GMT"
								},
								{
									"key": "Last-Modified",
									"value": "Tue, 02 Jun 2020 15:05:50 GMT"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Request-ID",
									"value": "dda31ea5-4303-4a21-93be-42870c83448f"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15768000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"dda31ea5-4303-4a21-93be-42870c83448f\",\n    \"code\": 200,\n    \"errors\": null,\n    \"status\": true,\n    \"message\": null,\n    \"response\": {\n        \"id_pymnt_customer\": \"5ed66ace6b7d274f245b7685\",\n        \"id_pymnt_provider\": \"38dc9e9308898644058b4563\",\n        \"customer_key\": \"cus_dev_5ed66acf6758d\",\n        \"is_active\": true,\n        \"dt_create\": 1591110350,\n        \"dt_modify\": null\n    }\n}"
						}
					]
				},
				{
					"name": "ListCustomers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec2eca3e-f371-41bc-a24f-8855c81eae11",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseSyncUrl}}/v1/payments/customers",
							"host": [
								"{{baseSyncUrl}}"
							],
							"path": [
								"v1",
								"payments",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteCustomer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "16d9582e-03ef-487e-a0ae-576f6c325cf6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseSyncUrl}}/v1/payments/customers/{{id_pymnt_customer}}",
							"host": [
								"{{baseSyncUrl}}"
							],
							"path": [
								"v1",
								"payments",
								"customers",
								"{{id_pymnt_customer}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCustomer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9f9aa3ef-03bd-4ff0-907a-f122806bf2c9",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseSyncUrl}}/v1/payments/customers/{{id_pymnt_customer}}",
							"host": [
								"{{baseSyncUrl}}"
							],
							"path": [
								"v1",
								"payments",
								"customers",
								"{{id_pymnt_customer}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Customers are logical segmentations for end-users. It's a best practice to register customers in order to have their information grouped and have control on both ends. It is required to have at least one customer registered to add cards and create charges\n\n\n```json\n{\n    \"id_pymnt_customer\": \"5ed66ace6b7d274f245b7685\",\n    // SyncID, The ID of the customer assignated by Paybook Sync\n    \"id_pymnt_provider\": \"38dc9e9308898644058b4563\",\n    // SyncID, The ID of the payment provider assignated by Paybook Sync\n    \"customer_key\": \"cus_dev_5ed66acf6758d\",\n    // String, The customer key\n    \"is_active\": true,\n    // Boolean, status of the customer\n    \"dt_create\": 1591110350,\n    // Integer; a Unix timestamp of the time when the user was created\n    \"dt_modify\": null\n    // Integer; a Unix timestamp of the time when the user was modified\n}\n```",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ffa45b64-59ec-4e08-a53b-ad833b1975b3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "cd417219-d086-40ed-af70-51d65e4a6e14",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Operations",
			"item": [
				{
					"name": "ReimburseCharge",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "386a1cea-5c95-4451-a75b-a2759f0bb733",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseSyncUrl}}/v1/payments/operations/{{id_pymnt_charge}}/reimburse",
							"host": [
								"{{baseSyncUrl}}"
							],
							"path": [
								"v1",
								"payments",
								"operations",
								"{{id_pymnt_charge}}",
								"reimburse"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{apiSyncKey}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "{{id_contract}}",
				"type": "string"
			},
			{
				"key": "password",
				"value": "{{apiSyncKey}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "efae3ccc-d7fb-41f2-aa38-2c2c31717d0a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "2e9aee35-8174-448e-a00b-af13c4f1aad2",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}